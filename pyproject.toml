[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "overkill"
version = "3.0.0"
description = "Professional media center configuration for Raspberry Pi 5"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "OVERKILL Team", email = "overkill@example.com"}
]
keywords = ["raspberry-pi", "overclocking", "media-center", "kodi", "configuration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Multimedia :: Video",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Environment :: Console",
]
requires-python = ">=3.9"
dependencies = [
    "click>=8.0",
    "rich>=13.0",
    "pyyaml>=6.0",
    "psutil>=5.9",
    "requests>=2.28",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]

[project.scripts]
overkill = "overkill.configurator:main"

[project.urls]
Homepage = "https://github.com/flashingcursor/overkill-pi"
Documentation = "https://github.com/flashingcursor/overkill-pi/wiki"
Repository = "https://github.com/flashingcursor/overkill-pi"
Issues = "https://github.com/flashingcursor/overkill-pi/issues"

[tool.setuptools]
packages = ["overkill"]
include-package-data = true

[tool.setuptools.package-data]
overkill = [
    "data/*.yaml",
    "templates/*.conf",
]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.flake8]
max-line-length = 100
exclude = [".git", "__pycache__", "build", "dist", ".venv"]
ignore = ["E203", "W503"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = "-ra -q --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "hardware: marks tests that require real hardware",
]

[tool.coverage.run]
source = ["overkill"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]